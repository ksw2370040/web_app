"""
Django settings for kashi_wa project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from django.contrib.messages import constants
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%k#gqk)h@avdly6ns4%1agfw99f^9w--1x9=iq^ew6!)3nsl%$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # Django管理サイト
    'django.contrib.auth',  # 認証システム
    'django.contrib.contenttypes',  # コンテンツタイプフレームワーク
    'django.contrib.sessions',  # セッションフレームワーク
    'django.contrib.messages',  # メッセージフレームワーク
    'django.contrib.staticfiles',  # 静的ファイル管理
    'gameapp.apps.GameappConfig',  # ゲームアプリ
    'accounts.apps.AccountsConfig',  # アカウントアプリ
    'widget_tweaks',  # フォームの表示をカスタマイズするためのモジュール
    'stdimage',  # 画像のリサイズや自動回転をサポートするモジュール
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # セキュリティ対策
    'django.contrib.sessions.middleware.SessionMiddleware',  # セッション管理
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # 認証
    'django.contrib.messages.middleware.MessageMiddleware',  # メッセージフレームワーク
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'kashi_wa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'kashi_wa.wsgi.application'

ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'gamewiki',  # データベース名
        'USER': 'root',  # データベースユーザー
        'PASSWORD': 'password',  # データベースパスワード
        'HOST': 'localhost',  # データベースホスト
        'PORT': '3306',  # データベースポート
    }
}


AUTH_USER_MODEL = 'accounts.CustomUser'

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ja'  # 言語コード
TIME_ZONE = 'Asia/Tokyo'  # タイムゾーン
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'  # 静的ファイルのURL
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)  # 静的ファイルのディレクトリ

MEDIA_ROOT = os.path.join(BASE_DIR,'media')  # アップロードされたメディアファイルの保存先ディレクトリ
MEDIA_URL = '/media/'  # アップロードされたメディアファイルのURL


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'

EMAIL_PORT = 587

EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'blogapp.2370040@gmail.com'

EMAIL_HOST_PASSWORD = 'vhoxhswldhfxldqt'

MESSAGE_TAGS = { 
    constants.SUCCESS: 'alert alert-success', 
}
